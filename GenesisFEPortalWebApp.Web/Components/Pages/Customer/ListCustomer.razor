@* @page "/customer"
@using GenesisFEPortalWebApp.Models.Entities.Core

<h3>Clientes</h3>
<div class="container-fluid">
    @if (customers == null)
    {
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" justi Wrap="FlexWrap.Wrap">
            <RadzenProgressBarCircular ShowValue="true" Mode="ProgressBarMode.Indeterminate" Size="ProgressBarCircularSize.Large">
                <Template>Espere</Template>
            </RadzenProgressBarCircular>
        </RadzenStack>


    }
    else
    {
        <RadzenStack Orientation="Orientation.Vertical">

            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.End" JustifyContent="JustifyContent.End">
                <a class="btn btn-primary" href="/customer/create">Agregar Cliente</a>
            </RadzenStack>

            <RadzenStack>
                <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" PageSize="10" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" Data="@customers" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or" SelectionMode="DataGridSelectionMode.Single" TItem="CustomerModel" Style="max-width:inherit">
                    <Columns>
                        <RadzenDataGridColumn Property="@nameof(CustomerModel.ID)" Filterable="false" Title="ID" Width="80px" TextAlign="TextAlign.Center" />
                        <RadzenDataGridColumn Property="@nameof(CustomerModel.CustomerName)" Title="Nombre Cliente" Width="160px" />
                        <RadzenDataGridColumn Property="@nameof(CustomerModel.CommercialName)" Title="Nombre Comercial" Width="160px" />
                        <RadzenDataGridColumn Property="@nameof(CustomerModel.Identification)" Title="Documento" Width="200px" />
                        <RadzenDataGridColumn Property="IdentificationType.Description" Title="Tipo de documento" Width="120px" />
                        <RadzenDataGridColumn Property="@nameof(CustomerModel.Address)" Title="Dirección" FormatString="{0:d}" Width="160px" />
                        <RadzenDataGridColumn Property="@nameof(CustomerModel.Email)" Title="Email" FormatString="{0:d}" Width="160px" />
                        <RadzenDataGridColumn Property="@nameof(CustomerModel.Phone)" Title="Phone" Width="200px" />
                        <RadzenDataGridColumn Property="@nameof(CustomerModel.PhoneCode)" Title="Code" Width="160px" />
                        <RadzenDataGridColumn Width="100px" Property="@nameof(CustomerModel.ID)" Title="Acciones" Frozen="true" Filterable="false">
                            <Template Context="data">
                                <RadzenButton ButtonStyle="ButtonStyle.Info" Variant="Variant.Flat" Shade="Shade.Lighter" Icon="contract_edit" Click=@(args => OnClick("update" , data.ID)) />
                                <RadzenButton ButtonStyle="ButtonStyle.Secondary" Variant="Variant.Flat" Shade="Shade.Lighter" Icon="person_remove" />
                            </Template>
                        </RadzenDataGridColumn>
                    </Columns>
                </RadzenDataGrid>
            </RadzenStack>
        </RadzenStack>
    }
</div>
*@
@*  
@inject IToastService ToastService
@page "/customer"
@using GenesisFEPortalWebApp.Models.Entities.Core

<RadzenDialog /> <!-- Necesario para los diálogos -->

<h3>Clientes</h3>
<div class="container-fluid">
    @if (customers == null)
    {
        <RadzenProgressBarCircular ShowValue="true" Mode="ProgressBarMode.Indeterminate" Size="ProgressBarCircularSize.Large">
            <Template>Espere</Template>
        </RadzenProgressBarCircular>
    }
    else
    {
        <RadzenStack Orientation="Orientation.Vertical">
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.End" JustifyContent="JustifyContent.End">
                <a class="btn btn-primary" href="/customer/create">Agregar Cliente</a>
            </RadzenStack>

            <RadzenStack>
                <RadzenDataGrid @ref="grid" AllowFiltering="true" AllowColumnResize="true"
                                AllowAlternatingRows="false" FilterMode="FilterMode.Advanced"
                                PageSize="10" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left"
                                Data="@customers" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or"
                                SelectionMode="DataGridSelectionMode.Single" TItem="CustomerModel"
                                Style="max-width:inherit">
                    <Columns>
                        <!-- ... columnas existentes ... -->
                        <RadzenDataGridColumn Property="@nameof(CustomerModel.ID)" Filterable="false" Title="ID" Width="80px" TextAlign="TextAlign.Center" />
                        <RadzenDataGridColumn Property="@nameof(CustomerModel.CustomerName)" Title="Nombre Cliente" Width="160px" />
                        <RadzenDataGridColumn Property="@nameof(CustomerModel.CommercialName)" Title="Nombre Comercial" Width="160px" />
                        <RadzenDataGridColumn Property="@nameof(CustomerModel.Identification)" Title="Documento" Width="200px" />
                        <RadzenDataGridColumn Property="IdentificationType.Description" Title="Tipo de documento" Width="120px" />
                        <RadzenDataGridColumn Property="@nameof(CustomerModel.Address)" Title="Dirección" FormatString="{0:d}" Width="160px" />
                        <RadzenDataGridColumn Property="@nameof(CustomerModel.Email)" Title="Email" FormatString="{0:d}" Width="160px" />
                        <RadzenDataGridColumn Property="@nameof(CustomerModel.Phone)" Title="Phone" Width="200px" />
                        <RadzenDataGridColumn Property="@nameof(CustomerModel.PhoneCode)" Title="Code" Width="160px" />

                        <RadzenDataGridColumn Width="120px" Property="ID" Title="Acciones" Frozen="true" Filterable="false">
                            <Template Context="data">
                                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem">
                                    <RadzenButton ButtonStyle="ButtonStyle.Info"
                                                  Variant="Variant.Flat"
                                                  Shade="Shade.Lighter"
                                                  Icon="edit"
                                                  Size="ButtonSize.Medium"
                                                  Click="@(() => OnClick("update", data.ID))"
                                                  ToolTip="Editar" />

                                    <RadzenButton ButtonStyle="ButtonStyle.Danger"
                                                  Variant="Variant.Flat"
                                                  Shade="Shade.Lighter"
                                                  Icon="delete"
                                                  Size="ButtonSize.Medium"
                                                  Click="@(() => HandleDelete(data))"
                                                  ToolTip="Eliminar" />
                                </RadzenStack>
                            </Template>
                        </RadzenDataGridColumn>
                    </Columns>
                </RadzenDataGrid>
            </RadzenStack>
        </RadzenStack>
    }
</div>

 *@
                                            
@* @page "/customer"
@using GenesisFEPortalWebApp.Models.Entities.Core

<RadzenDialog />

<h3>Clientes</h3>
<div class="container-fluid">
    @if (customers == null)
    {
        <RadzenProgressBarCircular ShowValue="true" Mode="ProgressBarMode.Indeterminate" Size="ProgressBarCircularSize.Large">
            <Template>Espere</Template>
        </RadzenProgressBarCircular>
    }
    else
    {
        <RadzenStack Orientation="Orientation.Vertical">
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.End" JustifyContent="JustifyContent.End">
                <RadzenButton Text="Agregar Cliente"
                              Icon="add"
                              ButtonStyle="ButtonStyle.Primary"
                              Click="@(() => NavigateToRoute("create"))" />
            </RadzenStack>

            <RadzenDataGrid @ref="grid"
                            Data="@customers.ToList()"
                            AllowFiltering="true"
                            AllowColumnResize="true"
                            FilterMode="FilterMode.Advanced"
                            PageSize="10"
                            AllowPaging="true">
                <Columns>
                    <RadzenDataGridColumn TItem="CustomerModel" Property="CustomerName" Title="Nombre" />
                    <RadzenDataGridColumn TItem="CustomerModel" Property="Identification" Title="Identificación" />
                    <RadzenDataGridColumn TItem="CustomerModel" Property="Email" Title="Email" />
                    <RadzenDataGridColumn TItem="CustomerModel" Property="Phone" Title="Teléfono" />
                    <RadzenDataGridColumn TItem="CustomerModel" Width="120px" Title="Acciones" Filterable="false">
                        <Template Context="customer">
                            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem">
                                <RadzenButton ButtonStyle="ButtonStyle.Info"
                                              Variant="Variant.Flat"
                                              Shade="Shade.Lighter"
                                              Icon="edit"
                                              Size="ButtonSize.Medium"
                                              Click="@(() => NavigateToRoute($"update/{customer.ID}"))"
                                              ToolTip="Editar" />

                                <RadzenButton ButtonStyle="ButtonStyle.Danger"
                                              Variant="Variant.Flat"
                                              Shade="Shade.Lighter"
                                              Icon="delete"
                                              Size="ButtonSize.Medium"
                                              Click="@(() => HandleDelete(customer))"
                                              ToolTip="Eliminar" />
                            </RadzenStack>
                        </Template>
                    </RadzenDataGridColumn>
                </Columns>
            </RadzenDataGrid>
        </RadzenStack>
    }
</div> *@

                                              @page "/customer"
@using GenesisFEPortalWebApp.Models.Entities.Core

<PageTitle>Gestión de Clientes</PageTitle>

<RadzenStack Gap="1rem" Class="rz-p-4">
    <!-- Encabezado con título y botón de agregar -->
    <RadzenRow AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" Class="rz-mb-4">
        <RadzenColumn Size="6">
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="1rem">
                <RadzenIcon Icon="people" />
                <RadzenText TextStyle="TextStyle.H3">Gestión de Clientes</RadzenText>
            </RadzenStack>
        </RadzenColumn>
        <RadzenColumn Size="6" class="rz-text-align-end">
            <RadzenButton Icon="add" Text="Nuevo Cliente"
                          ButtonStyle="ButtonStyle.Primary"
                          Click="@(() => NavigationManager.NavigateTo("/customer/create"))" />
        </RadzenColumn>
    </RadzenRow>

    <!-- Panel de Filtros -->
    <RadzenCard Class="rz-mb-4">
        <RadzenText TextStyle="TextStyle.Subtitle1" Class="rz-mb-3">Filtros de Búsqueda</RadzenText>
        <RadzenRow>
            <RadzenColumn Size="12" SizeMD="4">
                <RadzenTextBox Placeholder="Buscar por nombre..."
                               @bind-Value="@searchText"
                               Change="@(args => OnSearch(args))"
                               Class="w-100" />
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="3">
                <RadzenDropDown @bind-Value="@selectedIdentificationType"
                                Data="@IdentificationTypes"
                                TextProperty="Description"
                                ValueProperty="ID"
                                AllowClear="true"
                                Placeholder="Tipo de identificación"
                                Change="@OnSearch"
                                Class="w-100" />
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="3">
                <RadzenDropDown @bind-Value="@selectedStatus"
                                Data="@(new[] { "Todos", "Activos", "Inactivos" })"
                                Change="@OnSearch"
                                Placeholder="Estado"
                                Class="w-100" />
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="2" Class="rz-text-align-end">
                <RadzenButton Icon="refresh" Text="Limpiar"
                              ButtonStyle="ButtonStyle.Light"
                              Click="@ClearFilters" />
            </RadzenColumn>
        </RadzenRow>
    </RadzenCard>

    <!-- Tabla de Clientes -->
    @if (isLoading)
    {
        <RadzenProgressBar Mode="ProgressBarMode.Indeterminate" Value="100" />
    }
    else if (customers?.Any() != true)
    {
        <RadzenCard>
            <RadzenStack AlignItems="AlignItems.Center" Gap="1rem" Class="rz-p-4">
                <RadzenIcon Icon="info" />
                <RadzenText>No se encontraron clientes con los criterios especificados.</RadzenText>
                <RadzenButton Text="Crear Nuevo Cliente"
                              ButtonStyle="ButtonStyle.Secondary"
                              Click="@(() => NavigationManager.NavigateTo("/customer/create"))" />
            </RadzenStack>
        </RadzenCard>
    }
    else
    {
        <RadzenDataGrid @ref="grid"
                        Data="@customers"
                        TItem="CustomerModel"
                        AllowFiltering="false"
                        AllowSorting="true"
                        AllowPaging="true"
                        PageSize="10"
                        PagerHorizontalAlign="HorizontalAlign.Right"
                        ShowPagingSummary="true">
            <Columns>
                <RadzenDataGridColumn TItem="CustomerModel" Property="CustomerName" Title="Nombre"
                                      Sortable="true" Width="200px">
                    <Template Context="customer">
                        <RadzenStack Orientation="Orientation.Vertical" Gap="0">
                            <RadzenText TextStyle="TextStyle.Body1">@customer.CustomerName</RadzenText>
                            @if (!string.IsNullOrEmpty(customer.CommercialName))
                            {
                                <RadzenText TextStyle="TextStyle.Caption">@customer.CommercialName</RadzenText>
                            }
                        </RadzenStack>
                    </Template>
                </RadzenDataGridColumn>

                <RadzenDataGridColumn TItem="CustomerModel" Property="Identification" Title="Identificación"
                                      Width="150px">
                    <Template Context="customer">
                        <RadzenStack Orientation="Orientation.Vertical" Gap="0">
                            <RadzenText TextStyle="TextStyle.Body1">@customer.Identification</RadzenText>
                            <RadzenText TextStyle="TextStyle.Caption">@customer.IdentificationType?.Description</RadzenText>
                        </RadzenStack>
                    </Template>
                </RadzenDataGridColumn>

                <RadzenDataGridColumn TItem="CustomerModel" Property="Email" Title="Contacto" Width="200px">
                    <Template Context="customer">
                        <RadzenStack Orientation="Orientation.Vertical" Gap="0">
                            <RadzenText TextStyle="TextStyle.Body1">@customer.Email</RadzenText>
                            @if (!string.IsNullOrEmpty(customer.Phone))
                            {
                                <RadzenText TextStyle="TextStyle.Caption">
                                    @(!string.IsNullOrEmpty(customer.PhoneCode) ? $"{customer.PhoneCode} " : "")@customer.Phone
                                </RadzenText>
                            }
                        </RadzenStack>
                    </Template>
                </RadzenDataGridColumn>

                <RadzenDataGridColumn TItem="CustomerModel" Property="Address" Title="Ubicación" Width="250px">
                    <Template Context="customer">
                        <RadzenStack Orientation="Orientation.Vertical" Gap="0">
                            @if (!string.IsNullOrEmpty(customer.Address))
                            {
                                <RadzenText TextStyle="TextStyle.Body1">@customer.Address</RadzenText>
                            }
                            <RadzenText TextStyle="TextStyle.Caption">
                                @(customer.District?.DistrictName ?? ""),
                                @(customer.District?.Canton?.CantonName ?? "")
                            </RadzenText>
                        </RadzenStack>
                    </Template>
                </RadzenDataGridColumn>

                <RadzenDataGridColumn TItem="CustomerModel" Property="IsActive" Title="Estado" Width="100px"
                                      TextAlign="TextAlign.Center">
                    <Template Context="customer">
                        <RadzenBadge BadgeStyle="@(customer.IsActive ? BadgeStyle.Success : BadgeStyle.Light)"
                                     Text="@(customer.IsActive ? "Activo" : "Inactivo")" />
                    </Template>
                </RadzenDataGridColumn>

                <RadzenDataGridColumn TItem="CustomerModel" Width="100px" TextAlign="TextAlign.Center"
                                      Sortable="false" Filterable="false">
                    <Template Context="customer">
                        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center"
                                     Gap="0.5rem">
                            <RadzenButton ButtonStyle="ButtonStyle.Light"
                                          Icon="edit"
                                          Size="ButtonSize.Small"
                                          Click="@(() => NavigateToEdit(customer.ID))"
                                          ToolTip="Editar" />
                            <RadzenButton ButtonStyle="ButtonStyle.Light"
                                          Icon="@(customer.IsActive ? "block" : "check_circle")"
                                          Size="ButtonSize.Small"
                                          Click="@(() => ToggleCustomerStatus(customer))"
                                          ToolTip="@(customer.IsActive ? "Desactivar" : "Activar")" />
                        </RadzenStack>
                    </Template>
                </RadzenDataGridColumn>
            </Columns>
        </RadzenDataGrid>
    }
</RadzenStack>

<!-- Diálogo de confirmación -->
<RadzenDialog />
<RadzenNotification />